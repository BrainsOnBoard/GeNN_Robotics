var annotated_dup =
[
    [ "BoBRobotics", "namespaceBoBRobotics.html", "namespaceBoBRobotics" ],
    [ "CLI", null, [
      [ "ArgumentMismatch", "classCLI_1_1ArgumentMismatch.html", "classCLI_1_1ArgumentMismatch" ],
      [ "BadNameString", "classCLI_1_1BadNameString.html", "classCLI_1_1BadNameString" ],
      [ "CallForAllHelp", "classCLI_1_1CallForAllHelp.html", "classCLI_1_1CallForAllHelp" ],
      [ "CallForHelp", "classCLI_1_1CallForHelp.html", "classCLI_1_1CallForHelp" ],
      [ "ConfigError", "classCLI_1_1ConfigError.html", "classCLI_1_1ConfigError" ],
      [ "ConstructionError", "classCLI_1_1ConstructionError.html", "classCLI_1_1ConstructionError" ],
      [ "ConversionError", "classCLI_1_1ConversionError.html", "classCLI_1_1ConversionError" ],
      [ "Error", "classCLI_1_1Error.html", "classCLI_1_1Error" ],
      [ "ExcludesError", "classCLI_1_1ExcludesError.html", "classCLI_1_1ExcludesError" ],
      [ "ExtrasError", "classCLI_1_1ExtrasError.html", "classCLI_1_1ExtrasError" ],
      [ "FileError", "classCLI_1_1FileError.html", "classCLI_1_1FileError" ],
      [ "HorribleError", "classCLI_1_1HorribleError.html", "classCLI_1_1HorribleError" ],
      [ "IncorrectConstruction", "classCLI_1_1IncorrectConstruction.html", "classCLI_1_1IncorrectConstruction" ],
      [ "InvalidError", "classCLI_1_1InvalidError.html", "classCLI_1_1InvalidError" ],
      [ "is_bool", "structCLI_1_1is__bool.html", null ],
      [ "is_bool< bool >", "structCLI_1_1is__bool_3_01bool_01_4.html", null ],
      [ "is_vector", "structCLI_1_1is__vector.html", null ],
      [ "is_vector< std::vector< T, A > >", "structCLI_1_1is__vector_3_01std_1_1vector_3_01T_00_01A_01_4_01_4.html", null ],
      [ "OptionAlreadyAdded", "classCLI_1_1OptionAlreadyAdded.html", "classCLI_1_1OptionAlreadyAdded" ],
      [ "OptionNotFound", "classCLI_1_1OptionNotFound.html", "classCLI_1_1OptionNotFound" ],
      [ "ParseError", "classCLI_1_1ParseError.html", "classCLI_1_1ParseError" ],
      [ "RequiredError", "classCLI_1_1RequiredError.html", "classCLI_1_1RequiredError" ],
      [ "RequiresError", "classCLI_1_1RequiresError.html", "classCLI_1_1RequiresError" ],
      [ "RuntimeError", "classCLI_1_1RuntimeError.html", "classCLI_1_1RuntimeError" ],
      [ "Success", "classCLI_1_1Success.html", "classCLI_1_1Success" ],
      [ "ValidationError", "classCLI_1_1ValidationError.html", "classCLI_1_1ValidationError" ]
    ] ],
    [ "filesystem", null, [
      [ "path", "classfilesystem_1_1path.html", "classfilesystem_1_1path" ]
    ] ],
    [ "gazebo", null, [
      [ "DifferentialDrivePlugin", "classgazebo_1_1DifferentialDrivePlugin.html", "classgazebo_1_1DifferentialDrivePlugin" ],
      [ "GazeboQuadCopterPlugin", "classgazebo_1_1GazeboQuadCopterPlugin.html", "classgazebo_1_1GazeboQuadCopterPlugin" ]
    ] ],
    [ "io", null, [
      [ "detail", null, [
        [ "AsynchronousReader", "classio_1_1detail_1_1AsynchronousReader.html", "classio_1_1detail_1_1AsynchronousReader" ],
        [ "NonOwningIStreamByteSource", "classio_1_1detail_1_1NonOwningIStreamByteSource.html", "classio_1_1detail_1_1NonOwningIStreamByteSource" ],
        [ "NonOwningStringByteSource", "classio_1_1detail_1_1NonOwningStringByteSource.html", "classio_1_1detail_1_1NonOwningStringByteSource" ],
        [ "OwningStdIOByteSourceBase", "classio_1_1detail_1_1OwningStdIOByteSourceBase.html", "classio_1_1detail_1_1OwningStdIOByteSourceBase" ],
        [ "SynchronousReader", "classio_1_1detail_1_1SynchronousReader.html", "classio_1_1detail_1_1SynchronousReader" ]
      ] ],
      [ "error", null, [
        [ "base", "structio_1_1error_1_1base.html", "structio_1_1error_1_1base" ],
        [ "can_not_open_file", "structio_1_1error_1_1can__not__open__file.html", "structio_1_1error_1_1can__not__open__file" ],
        [ "duplicated_column_in_header", "structio_1_1error_1_1duplicated__column__in__header.html", "structio_1_1error_1_1duplicated__column__in__header" ],
        [ "escaped_string_not_closed", "structio_1_1error_1_1escaped__string__not__closed.html", "structio_1_1error_1_1escaped__string__not__closed" ],
        [ "extra_column_in_header", "structio_1_1error_1_1extra__column__in__header.html", "structio_1_1error_1_1extra__column__in__header" ],
        [ "header_missing", "structio_1_1error_1_1header__missing.html", "structio_1_1error_1_1header__missing" ],
        [ "integer_must_be_positive", "structio_1_1error_1_1integer__must__be__positive.html", "structio_1_1error_1_1integer__must__be__positive" ],
        [ "integer_overflow", "structio_1_1error_1_1integer__overflow.html", "structio_1_1error_1_1integer__overflow" ],
        [ "integer_underflow", "structio_1_1error_1_1integer__underflow.html", "structio_1_1error_1_1integer__underflow" ],
        [ "invalid_single_character", "structio_1_1error_1_1invalid__single__character.html", "structio_1_1error_1_1invalid__single__character" ],
        [ "line_length_limit_exceeded", "structio_1_1error_1_1line__length__limit__exceeded.html", "structio_1_1error_1_1line__length__limit__exceeded" ],
        [ "missing_column_in_header", "structio_1_1error_1_1missing__column__in__header.html", "structio_1_1error_1_1missing__column__in__header" ],
        [ "no_digit", "structio_1_1error_1_1no__digit.html", "structio_1_1error_1_1no__digit" ],
        [ "too_few_columns", "structio_1_1error_1_1too__few__columns.html", "structio_1_1error_1_1too__few__columns" ],
        [ "too_many_columns", "structio_1_1error_1_1too__many__columns.html", "structio_1_1error_1_1too__many__columns" ],
        [ "with_column_content", "structio_1_1error_1_1with__column__content.html", "structio_1_1error_1_1with__column__content" ],
        [ "with_column_name", "structio_1_1error_1_1with__column__name.html", "structio_1_1error_1_1with__column__name" ],
        [ "with_errno", "structio_1_1error_1_1with__errno.html", "structio_1_1error_1_1with__errno" ],
        [ "with_file_line", "structio_1_1error_1_1with__file__line.html", "structio_1_1error_1_1with__file__line" ],
        [ "with_file_name", "structio_1_1error_1_1with__file__name.html", "structio_1_1error_1_1with__file__name" ]
      ] ],
      [ "ByteSourceBase", "classio_1_1ByteSourceBase.html", "classio_1_1ByteSourceBase" ],
      [ "CSVReader", "classio_1_1CSVReader.html", "classio_1_1CSVReader" ],
      [ "double_quote_escape", "structio_1_1double__quote__escape.html", null ],
      [ "empty_line_comment", "structio_1_1empty__line__comment.html", null ],
      [ "ignore_overflow", "structio_1_1ignore__overflow.html", null ],
      [ "LineReader", "classio_1_1LineReader.html", "classio_1_1LineReader" ],
      [ "no_comment", "structio_1_1no__comment.html", null ],
      [ "no_quote_escape", "structio_1_1no__quote__escape.html", null ],
      [ "set_to_max_on_overflow", "structio_1_1set__to__max__on__overflow.html", null ],
      [ "single_and_empty_line_comment", "structio_1_1single__and__empty__line__comment.html", null ],
      [ "single_line_comment", "structio_1_1single__line__comment.html", null ],
      [ "throw_on_overflow", "structio_1_1throw__on__overflow.html", null ],
      [ "trim_chars", "structio_1_1trim__chars.html", null ]
    ] ],
    [ "matplotlibcpp", null, [
      [ "detail", null, [
        [ "_interpreter", "structmatplotlibcpp_1_1detail_1_1__interpreter.html", "structmatplotlibcpp_1_1detail_1_1__interpreter" ]
      ] ],
      [ "select_npy_type", "structmatplotlibcpp_1_1select__npy__type.html", null ],
      [ "select_npy_type< bool >", "structmatplotlibcpp_1_1select__npy__type_3_01bool_01_4.html", null ],
      [ "select_npy_type< double >", "structmatplotlibcpp_1_1select__npy__type_3_01double_01_4.html", null ],
      [ "select_npy_type< float >", "structmatplotlibcpp_1_1select__npy__type_3_01float_01_4.html", null ],
      [ "select_npy_type< int16_t >", "structmatplotlibcpp_1_1select__npy__type_3_01int16__t_01_4.html", null ],
      [ "select_npy_type< int32_t >", "structmatplotlibcpp_1_1select__npy__type_3_01int32__t_01_4.html", null ],
      [ "select_npy_type< int64_t >", "structmatplotlibcpp_1_1select__npy__type_3_01int64__t_01_4.html", null ],
      [ "select_npy_type< int8_t >", "structmatplotlibcpp_1_1select__npy__type_3_01int8__t_01_4.html", null ],
      [ "select_npy_type< uint16_t >", "structmatplotlibcpp_1_1select__npy__type_3_01uint16__t_01_4.html", null ],
      [ "select_npy_type< uint32_t >", "structmatplotlibcpp_1_1select__npy__type_3_01uint32__t_01_4.html", null ],
      [ "select_npy_type< uint64_t >", "structmatplotlibcpp_1_1select__npy__type_3_01uint64__t_01_4.html", null ],
      [ "select_npy_type< uint8_t >", "structmatplotlibcpp_1_1select__npy__type_3_01uint8__t_01_4.html", null ]
    ] ],
    [ "std", null, [
      [ "numeric_limits< units::unit_t< Units, T, NonLinearScale > >", "classstd_1_1numeric__limits_3_01units_1_1unit__t_3_01Units_00_01T_00_01NonLinearScale_01_4_01_4.html", null ]
    ] ],
    [ "units", "namespaceunits.html", "namespaceunits" ],
    [ "Agent", "classAgent.html", "classAgent" ],
    [ "AntWorldDatabaseCreator", "classAntWorldDatabaseCreator.html", "classAntWorldDatabaseCreator" ],
    [ "CL1ToTB1", "classCL1ToTB1.html", "classCL1ToTB1" ],
    [ "Config", "classConfig.html", "classConfig" ],
    [ "Continuous", "classContinuous.html", "classContinuous" ],
    [ "CPU4Sigmoid", "classCPU4Sigmoid.html", "classCPU4Sigmoid" ],
    [ "CPU4ToCPU1", "classCPU4ToCPU1.html", "classCPU4ToCPU1" ],
    [ "DataFile", "classDataFile.html", "classDataFile" ],
    [ "GridDatabaseCreator", "classGridDatabaseCreator.html", "classGridDatabaseCreator" ],
    [ "ImageInput", "classImageInput.html", "classImageInput" ],
    [ "ImageInputBinary", "classImageInputBinary.html", "classImageInputBinary" ],
    [ "ImageInputHorizon", "classImageInputHorizon.html", "classImageInputHorizon" ],
    [ "ImageInputRaw", "classImageInputRaw.html", "classImageInputRaw" ],
    [ "InfoMax", "classInfoMax.html", "classInfoMax" ],
    [ "InfoMaxConstrained", "classInfoMaxConstrained.html", "classInfoMaxConstrained" ],
    [ "LIFExtCurrent", "classLIFExtCurrent.html", "classLIFExtCurrent" ],
    [ "MBMemory", "classMBMemory.html", "classMBMemory" ],
    [ "MemoryBase", "classMemoryBase.html", "classMemoryBase" ],
    [ "ObstacleCircumnavigationRunner", "classObstacleCircumnavigationRunner.html", "classObstacleCircumnavigationRunner" ],
    [ "PerfectMemory", "classPerfectMemory.html", "classPerfectMemory" ],
    [ "PerfectMemoryConstrained", "classPerfectMemoryConstrained.html", "classPerfectMemoryConstrained" ],
    [ "PontineToCPU1", "classPontineToCPU1.html", "classPontineToCPU1" ],
    [ "PositionerExample", "classPositionerExample.html", "classPositionerExample" ],
    [ "PreferredAngle", "classPreferredAngle.html", "classPreferredAngle" ],
    [ "Rotor", "classRotor.html", "classRotor" ],
    [ "RouteDatabaseCreator", "classRouteDatabaseCreator.html", "classRouteDatabaseCreator" ],
    [ "SerialReader", "classSerialReader.html", "classSerialReader" ],
    [ "StateHandler", "classStateHandler.html", "classStateHandler" ],
    [ "TBToCPU", "classTBToCPU.html", "classTBToCPU" ],
    [ "TBToTB", "classTBToTB.html", "classTBToTB" ],
    [ "tinydir_dir", "structtinydir__dir.html", "structtinydir__dir" ],
    [ "tinydir_file", "structtinydir__file.html", "structtinydir__file" ],
    [ "TLSigmoid", "classTLSigmoid.html", "classTLSigmoid" ],
    [ "TN2CPU4", "classTN2CPU4.html", "classTN2CPU4" ],
    [ "TN2Linear", "classTN2Linear.html", "classTN2Linear" ],
    [ "UAVNavigation", "classUAVNavigation.html", "classUAVNavigation" ],
    [ "VectorField", "classVectorField.html", "classVectorField" ]
];
#include "generate_images.h"

// BoB robotics includes
#include "common/macros.h"
#include "navigation/perfect_memory.h"

// Third-party includes
#include "third_party/path.h"

// Standard C++ includes
#include <algorithm>
#include <fstream>
#include <iomanip>

#define STR(s) #s
#define XSTR(s) STR(s)
#define FILENAME (XSTR(NAVIGATION_ALGO) ".h")

int main(int, char **argv)
{
    generateImages();
    BoBRobotics::Navigation::NAVIGATION_ALGO pm{ TestImageSize };
    for (const auto &image : TestImages) {
        pm.train(image);
    }

    std::string filename = FILENAME;
    for (char &c : filename) {
        if (c == '<' || c == '>')
            c = '_';
    }

    const auto filepath = filesystem::path{ argv[0] }.parent_path() / filename;
    std::ofstream ofs{ filepath.str() };
    BOB_ASSERT(ofs.good());
    ofs << std::setprecision(12);
    ofs << "// Generated by generate.cc\n\nstatic const float trueDifferences["
        << NumTestImages << "][" << TestImageSize.width << "] = { \n";

    const auto &differences = pm.getImageDifferences(TestImages[0]);
    for (const auto &snapDiffs : differences) {
        ofs << "    { ";
        for (const auto diff : snapDiffs) {
            ofs << diff << ", ";
        }
        ofs << "},\n";
    }
    ofs << "};\n";
}
